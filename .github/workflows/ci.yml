name: CI
on: [push, pull_request]
env:
  CLICOLOR_FORCE: 1
jobs:
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
        os: [ubuntu-latest,windows-latest,macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
        profile: minimal
        override: true
    - uses: Swatinem/rust-cache@v2
    - name: Build Rust Crate
      run: cargo build --release --no-default-features
      working-directory: example
    - name: Build Lua FFI
      run: cargo build --release --no-default-features --features ffi_lua
      working-directory: example
    - name: Build Py FFI
      run: cargo build --release --no-default-features --features ffi_py
      working-directory: example
    - name: Build Wasm FFI
      run: cargo build --release --no-default-features --features ffi_wasm
      working-directory: example
      
  python-build:
    name: python building
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
        os: [ubuntu-latest,windows-latest,macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
        profile: minimal
        override: true
    - uses: Swatinem/rust-cache@v2
    - name: Build Rust Crate
      run: cargo build --release --no-default-features
      working-directory: example
    - name: Build Py FFI
      run: cargo build --release --no-default-features --features ffi_py
      working-directory: example
      
  python-test:
    needs: python-build
    name: python testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
        os: [ubuntu-latest,windows-latest,macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
        profile: minimal
        override: true
    - name: set python
      uses: actions/setup-python@v4 
    - name: get maturin
      run: pip install maturin
    - uses: Swatinem/rust-cache@v2
    - name: Build Py FFI
      run: maturin develop --release --no-default-features --features ffi_py
      working-directory: example
    - name: test
      run: python ./example/tests/hello_py.py
